@* // <copyright file="Home.razor" company="UofU-CS3500">
    // Copyright (c) 2024 UofU-CS3500. All rights reserved.
    //
</copyright>
// Ignore Spelling: Spreadsheeeeeeeeee

// <summary>
    // Author:    Joel Rodriguez,  Nandhini Ramanathan, and Professor Jim.
    // Partner:   None
    // Date:      October 29, 2024
    // Course:    CS 3500, University of Utah, School of Computing
    // Copyright: CS 3500 and [Joel Rodriguez and Nandhini Ramanathan] - This work may not
    //            be copied for use in Academic Coursework.
    //
    // I, Joel Rodriguez and Nandhini Ramanathan, certify that I wrote this code from scratch and
    // did not copy it in part or whole from another source.  All
    // references used in the completion of the assignments are cited
    // in my README file.
    //
    // File Contents
    //
    //    This file contains our GUI elements for the Home page that consists of an About page, explains teh extra featured added to our spreadsheet, and
    //    information on how to use our Spreadsheet.
// </summary> *@

@page "/"

<PageTitle>CS 3500</PageTitle>

<div class="top-container">
    <h1>CS 3500 - Spreadsheet GUI in Blazor!</h1>

    <p class="intro-text">
        Not only learn about our Spreadsheet project's dope features but also about the GOAT creators behind the scenes:
    </p>

    <div class="button-container">
        <div class="dropdown">
            <input type="checkbox" id="about-toggle" class="toggle">
            <label for="about-toggle" class="btn btn-info">About</label>
            <div class="dropdown-content">
                <p style="color: black;">
                    To begin we'd like to say this page is basically our readme. I figured this would make your guys' life easier. < br />
                    This project is a Spreadsheet model which you can access through in the sidebar. You can start typing contents of numbers,
                    words, and formulas in the highlighted cell directly which get evaluated in the the cell and in the value toolbar on top.
                    This Spreadsheet will add 4,000,000+ aura to your daily life as you embody the U's spirit in our school colors.
                    You can use this Spreadsheet whenever and wherever you want, it's just a a click away!
                </p>
            </div>
        </div>

        <div class="button-container">
            <div class="dropdown">
                <input type="checkbox" id="HowTo-toggle" class="toggle">
                <label for="HowTo-toggle" class="btn btn-info">How To Use</label>
                <div class="dropdown-content">
                    <p style="color: black;">
                        To access our spreadsheet please click the spreadsheet button on the left sidebar upon loading into the spreadsheet you will 
                        be greeted with various options here's how to use each of our components: <br />
                        1. The spreadsheet works as any spreadsheet would! Go ahead and type things in either directly into each cell or in the contents
                        bar located in the tool bar!<br />
                        2. Feeling like changing the name of your spreadsheet? Go ahead and change it! It will be saved upon saving and loaded back in
                        when loading in. Illegal characters are handled correctly through the help of our program and your OS!<br />
                        3. Change the Row and Column numbers by using the Number inputs located in the bottom container. Only numbers are allowed and
                        anything less then 1 in both inputs is invalid and anything greater than 100 for the rows or 26 for the columns is rejected! <br />
                        4. Value is displayed when not pressed on it and contents are displayed in each cell when selected! <br />
                        5. Circular dependencies are caught and handled correctly. <br />
                        6. Our spreadsheet updates in real time after a cell has been successfully changed! <br />
                        7. Upon changing column/row numbers if a cell referenced a cell which no longer is visible the value for the cell (in the view only )
                        changes to an Evaluation Error. Upon bringing the cell back by changing row/col number back the cells value is reverted to its
                        original value!

                        We attempted to add the following:
                        1.  Attempted to add arrows keys to maneuver around cells in spreadsheet, it worked in every situation except for the situation where you were typing something and then pressed
                        arrow key. This led to various javascript errors which for whatever reason would overwrite the cell we maneuvered too with the text that we were typing. There was an also
                        an issue of practicality. A user must be selected into a input (and typing) to use the arrow keys. We abandoned the idea (you can view our git commits to see what we tried).
                        2. Attempted to add Google Ad-sense to our project for fun. We realized this would require a server so abandoned the idea.
                    </p>
                </div>
            </div>
        </div>

        <div class="dropdown">
            <input type="checkbox" id="feature-toggle" class="toggle">
            <label for="feature-toggle" class="btn btn-secondary">Extra Features</label>
            <div class="dropdown-content">
                <p style="color: black;">
                    1. The extra features we added include adding the ability to directly start typing values into the cells itself in the Spreadsheet.
                    We also added some GUI features which include adding the University's colors to our Spreadsheet model and adding a drop shadow
                    to filled out cells when you hover over them.<br />
                    2. Functionality to name your spreadsheet has also been added. Upon loading your sprd file the name that it was given will also be
                    loaded into the name input box. Illegal names are not allowed and are handled correctly.<br />
                    Upon changing column/row numbers if a cell referenced a cell which no longer is visible the value for the cell (in the view only )
                    changes to an Evaluation Error. Upon bringing the cell back by changing row/col number back the cells value is reverted to its
                    original value! <br />
                    3. Major styling changes.  <br />
                    4. Added functunality for when spreadsheet loads that its size changes to the minimum size it needs to be (min 10 x 10) For example if loaded spreadsheet
                    has a cell at Z100 filled out then the spreadsheet will load in at being 100x100. If there is no cell outside of the default 10x10 then the size loaded is 
                    10x10. <br />
                    We attempted to add the following: <br />
                    1.  Attempted to add arrows keys to maneuver around cells in spreadsheet, it worked in every situation except for the situation where you were typing something and then pressed
                    arrow key. This led to various javascript errors which for whatever reason would overwrite the cell we maneuvered too with the text that we were typing. There was an also
                    an issue of practicality. A user must be selected into a input (and typing) to use the arrow keys. We abandoned the idea (you can view our git commits to see what we tried).  <br />
                    2. Attempted to add Google Ad-sense to our project for fun. We realized this would require a server so abandoned the idea.
                </p>
            </div>
        </div>

        <div class="dropdown">
            <input type="checkbox" id="notes-toggle" class="toggle">
            <label for="notes-toggle" class="btn btn-dark">Notes To Instructors</label>
            <div class="dropdown-content">
                <p style="color: black;">
                    PLEASE HIT CTRL + SHIFT + R BEFORE GRADING. Sometimes the css is cached and hitting this button forces the css to be updated.
                    We decided to add the README to both the GUI and GUI.client per the instructions of a TA via office hours. We were also told to just leave the contents of
                    a cell that has been cut off after shortening spreadsheet in the spreadsheet per instructions of both Professor De St Germaine and a TA.
                    Upon loading we removed the popup which shows the JSON being loaded. This popup in our opinion is ugly and not user friendly. A random person in the real world
                    would get concerned by seeing such a thing so we removed it.<br />
                    <br />
                    In class Professor De St Germaine's GUI implementation included a Name in the Json. So we went ahead and included the name in our spreadsheet JSON as well.
                    A student also asked in class if we would be allowed to add a feature where we could add the name to the spreadsheet in which Professor De St Germaine said
                    yes. So we implemented it. (Check lecture 16 time stamp 41:00 if you want proof). <br />
                    <br />
                    We noticed that the website looks different on different machines, this is because Professor De St Germaine used px as a unit for defining the size of components instead of
                    vw and vh. We chose not to change this because this would require a lot of time (finding all components and figuring out how to convert to vw and vh). Please just use
                    a zoom percentage which seems right.
                    <br />
                    We also noticed that stylecop is giving a warning in mangage nuget dependencies. This is how it came with the starter code so we did not fix it as we assumed it was needed.


                </p>
                
            </div>
        </div>

        <div class="dropdown">
            <input type="checkbox" id="lore-toggle" class="toggle">
            <label for="lore-toggle" class="btn btn-dark">Creators' Lore</label>
            <div class="dropdown-content">
                <p style="color: black;">This project was put together by:</p>
                <ul class="indented-list">
                    <li style="color: black;">Joel Rodriguez: THE GOAT</li>
                    <li style="color: black;">Nandhini Ramanathan: jus a gurl</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<environment names="Development">
    <script src="_framework/aspnetcore-browser-refresh.js"></script>
</environment>

<style>
    .top-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        height: 100vh;
        padding-top: 50px;
        gap: 40px;
    }

    .intro-text {
        font-size: 22px;
        font-weight: bold;
        text-align: center;
    }

    .button-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        width: 100%;
        max-width: 1500px;
    }
    .home-text{
        color: black;
    }
    .dropdown {
        position: relative;
        width: 100%;
    }

    .toggle {
        display: none;
    }

    .btn {
        display: block;
        width: 100%;
        height: 60px;
        font-size: 20px;
        border-radius: 12px;
        cursor: pointer;
        text-align: center;
        transition: background-color 0.3s ease;
        line-height: 60px;
        color: white;
    }

    .btn-info {
        background-color: #f94449;
        color: white;
    }

        .btn-info:hover {
            background-color: gray;
            color: white;
        }

    .btn-secondary {
        background-color: #f01e2c;
        color: white;
    }

        .btn-secondary:hover {
            background-color: gray;
            color: white;
        }

    .btn-dark {
        background-color: #c30010;
        color: white;
    }

        .btn-dark:hover {
            background-color: gray;
            color: white;
        }

    .dropdown-content {
        display: none;
        margin-top: 15px;
        padding: 14px;
        background-color: white;
        border: 1px solid red;
        border-radius: 8px;
        font-size: 19px;
        line-height: 1.6;
    }

    .toggle:checked + label + .dropdown-content {
        display: block;
    }
</style>
